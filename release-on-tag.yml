
name: Release on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: "17"
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse version from tag
        id: ver
        run: |
          TAG="${GITHUB_REF_NAME}"
          # e.g., v1.2.3 -> 1.2.3
          VNAME="${TAG#v}"
          # versionCode: yyyymmddNN (run number last 2 digits)
          VCODE="$(date +%Y%m%d)${GITHUB_RUN_NUMBER##*[!0-9]}"
          echo "version_name=$VNAME" >> $GITHUB_OUTPUT
          echo "version_code=$VCODE" >> $GITHUB_OUTPUT

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Decode keystore (if provided)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > $HOME/release.jks
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Build storeRelease AAB with tag version
        working-directory: client-android
        env:
          ANDROID_KEYSTORE_PATH: ${{ runner.home }}/release.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          VERSION_NAME: ${{ steps.ver.outputs.version_name }}
          VERSION_CODE: ${{ steps.ver.outputs.version_code }}
        run: |
          ./gradlew :app:clean :app:bundleStoreRelease --stacktrace --no-daemon
          ls -l app/build/outputs/bundle/storeRelease/

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: setouta-${{ steps.ver.outputs.version_name }}-aab
          path: client-android/app/build/outputs/bundle/storeRelease/*.aab

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Setouta ${{ steps.ver.outputs.version_name }}
          draft: false
          prerelease: false
          files: |
            client-android/app/build/outputs/bundle/storeRelease/*.aab

      - name: Upload to Google Play (Internal testing)
        if: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON != '' }}
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.setouta.assistant
          releaseFiles: client-android/app/build/outputs/bundle/storeRelease/*.aab
          track: internal
          status: draft

  screenshots:
    runs-on: macos-latest
    needs: build-and-upload
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Run emulator and capture screenshots
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          arch: x86_64
          target: google_apis
          profile: pixel_6
          script: |
            adb devices
            # Install debug to take screenshots of UI (no signing needed)
            cd client-android
            ./gradlew :app:assembleStoreDebug
            adb install -r app/build/outputs/apk/store/debug/app-store-debug.apk || true
            adb shell am start -n com.setouta.assistant/.ConsentActivity
            # Give it time to render
            sleep 10
            adb exec-out screencap -p > ../store-screenshot-consent.png
            adb shell am start -n com.setouta.assistant/.MainActivity
            sleep 5
            adb exec-out screencap -p > ../store-screenshot-main.png
            adb shell am start -n com.setouta.assistant/.PrivacyCenterActivity
            sleep 5
            adb exec-out screencap -p > ../store-screenshot-privacy.png
            cd ..

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: store-screenshots
          path: |
            store-screenshot-*.png
